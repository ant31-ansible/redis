---
- name: create sentinel working directory
  file: path={{ redis_sentinel_dir }} state=directory
        recurse=yes
        owner={{ redis_user }}
  tags:
    - redis
    - redis-sentinel

- name: create sentinel init script
  template: src="redis_sentinel.init.j2"
            dest=/etc/init.d/sentinel_{{ redis_sentinel_port }}
            mode=0755 backup=yes
  tags:
    - redis
    - redis-sentinel

- name: reload systemd
  command: systemctl daemon-reload
  changed_when: false
  tags:
    - redis
    - redis-sentinel

- name: check if sentinel log file exists
  stat: path={{ redis_sentinel_logfile }}
  register: sentinel_logfile_stat
  tags:
    - redis
    - redis-sentinel

- name: ensure sentinel pidfile directory exists and has correct owner
  file: path={{ redis_sentinel_pidfile|dirname }}
        owner={{ redis_user }}
        state=directory
        recurse=yes
  tags:
    - redis
    - redis-sentinel

- name: ensure sentinel logfile directory exists and has correct owner
  file: path={{ redis_sentinel_logfile|dirname }}
        owner={{ redis_user }}
        state=directory
        recurse=yes
  when: redis_sentinel_logfile
  tags:
    - redis
    - redis-sentinel

- name: ensure that sentinel log file exists and is writable by redis
  file: path={{ redis_sentinel_logfile }}
        owner={{ redis_user }}
        group={{ redis_user }}
        mode=0600
        state=touch
  when: sentinel_logfile_stat.stat.exists == False and redis_sentinel_logfile != '""'
  tags:
    - redis
    - redis-sentinel

- name: create sentinel config file
  template: src=redis_sentinel.conf.j2
            dest=/etc/redis/sentinel_{{ redis_sentinel_port }}.conf
            owner={{ redis_user }}
            backup=yes
  notify: restart sentinel
  tags:
    - redis
    - redis-sentinel


- name: add sentinel init config file
  template: dest=/etc/default/sentinel_{{ redis_sentinel_port }}
            src=redis.init.conf.j2 backup=yes
  notify: restart sentinel
  tags:
    - redis
    - redis-sentinel

# Flush handlers before ensuring the service is started to prevent
# a start and then restart
- name: flush handlers to apply config changes
  meta: flush_handlers
  tags:
    - redis
    - redis-sentinel

- name: ensure sentinel is running
  service: name=sentinel_{{ redis_sentinel_port }} state=started
  when: redis_as_service
  tags:
    - redis
    - redis-sentinel

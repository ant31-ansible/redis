---

- name: Select Redis-master
  set_fact:
    redis_slaveof: "{{redis_master_host}} {{redis_master_port}}"
  when: "{{redis_master != inventory_hostname}}"
  tags:
    - redis

- name: create redis working directory
  file: path={{ redis_dir }} state=directory
        recurse=yes
        owner={{ redis_user }}
  tags:
    - redis

- name: create redis init script
  template: src=redis.init.j2 dest=/etc/init.d/redis_{{ redis_port }}
            mode=0755 backup=yes
  register: init
  tags:
    - redis

- name: reload systemd
  command: systemctl daemon-reload
  changed_when: false
  tags:
    - redis


- name: check if log file exists
  stat: path={{ redis_logfile }}
  register: logfile_stat
  tags:
    - redis

# - name: ensure pidfile directory exists and has correct owner
#   file: path={{ redis_pidfile|dirname }}
#         owner={{ redis_user }}
#         state=directory
#         recurse=yes
#   tags:
#     - redis

# - name: ensure logfile directory exists and has correct owner
#   file: path={{ redis_logfile|dirname }}
#         owner={{ redis_user }}
#         state=directory
#         recurse=yes
#   tags:
#     - redis

# - name: ensure that log file exists and is writable by redis
#   file: path={{ redis_logfile }}
#         owner={{ redis_user }}
#         group={{ redis_user }}
#         mode=0600
#         state=touch
#   when: logfile_stat.stat.exists == False and redis_logfile != '""'
#   tags:
#     - redis

- name: create redis config file
  template: src=redis.conf.j2 dest=/etc/redis/{{ redis_port }}.conf
            owner={{ redis_user }} backup=yes
  notify: restart redis
  tags:
    - redis

- name: add redis init config file
  template: dest=/etc/default/redis_{{ redis_port }}
            src=redis.init.conf.j2 backup=yes
  notify: restart redis
  tags:
    - redis

# Flush handlers before ensuring the service is started to prevent
# a start and then restart
- name: flush handlers to apply config changes
  meta: flush_handlers

- name: ensure redis is running
  service: name=redis_{{ redis_port }} state=started
  tags:
    - redis
